- name: Add Grafana Helm repository
  kubernetes.core.helm_repository:
    name: grafana
    repo_url: "https://grafana.github.io/helm-charts"

- name: Add Prometheus Helm repository
  kubernetes.core.helm_repository:
    name: prometheus-community
    repo_url: "https://prometheus-community.github.io/helm-charts"

- name: Create namespace for monitoring
  kubernetes.core.k8s:
    name: monitoring
    api_version: v1
    kind: Namespace
    state: present
    kubeconfig: "/home/{{ ansible_user }}/.kube/config"

# Install Prometheus
- name: Install/upgrade Prometheus via Helm
  kubernetes.core.helm:
    name: prometheus
    chart_ref: prometheus
    chart_repo_url: https://prometheus-community.github.io/helm-charts
    release_namespace: monitoring
    create_namespace: true
    state: present
    values:
      alertmanager:
        enabled: false
      pushgateway:
        enabled: false
    kubeconfig: "/home/{{ ansible_user }}/.kube/config"

# Install Loki
- name: Install/upgrade Loki via Helm
  kubernetes.core.helm:
    name: loki
    chart_ref: loki
    chart_repo_url: https://grafana.github.io/helm-charts
    release_namespace: monitoring
    create_namespace: true
    state: present
    values:
      loki:
        auth_enabled: false
    kubeconfig: "/home/{{ ansible_user }}/.kube/config"

# Install Tempo
- name: Install/upgrade Tempo via Helm
  kubernetes.core.helm:
    name: tempo
    chart_ref: tempo
    chart_repo_url: https://grafana.github.io/helm-charts
    release_namespace: monitoring
    create_namespace: true
    state: present
    values:
      tempo:
        search_enabled: true
    kubeconfig: "/home/{{ ansible_user }}/.kube/config"

# Install Grafana
- name: Install/upgrade Grafana via Helm
  kubernetes.core.helm:
    name: grafana
    chart_ref: grafana
    chart_repo_url: https://grafana.github.io/helm-charts
    release_namespace: monitoring
    create_namespace: true
    state: present
    values:
      adminPassword: "admin"
      datasources:
        datasources.yaml:
          apiVersion: 1
          datasources:
            - name: Prometheus
              uid: prometheus_uid
              type: prometheus
              url: http://prometheus-server.monitoring.svc.cluster.local
              access: proxy
            - name: Loki
              uid: loki_uid
              type: loki
              url: http://loki.monitoring.svc.cluster.local:3100
              access: proxy
            - name: Tempo
              uid: tempo_uid
              type: tempo
              url: http://tempo.monitoring.svc.cluster.local:3200
              access: proxy
    kubeconfig: "/home/{{ ansible_user }}/.kube/config"

# Verify installations
- name: Verify Prometheus installation
  kubernetes.core.k8s_info:
    kind: Pod
    namespace: monitoring
    label_selectors:
      - app=prometheus
    kubeconfig: "/home/{{ ansible_user }}/.kube/config"
  register: prometheus_pods

- name: Verify Loki installation
  kubernetes.core.k8s_info:
    kind: Pod
    namespace: monitoring
    label_selectors:
      - app=loki
    kubeconfig: "/home/{{ ansible_user }}/.kube/config"
  register: loki_pods

- name: Verify Tempo installation
  kubernetes.core.k8s_info:
    kind: Pod
    namespace: monitoring
    label_selectors:
      - app=tempo
    kubeconfig: "/home/{{ ansible_user }}/.kube/config"
  register: tempo_pods

- name: Verify Grafana installation
  kubernetes.core.k8s_info:
    kind: Pod
    namespace: monitoring
    label_selectors:
      - app=grafana
    kubeconfig: "/home/{{ ansible_user }}/.kube/config"
  register: grafana_pods

- name: Print installation status
  debug:
    msg:
      - "Prometheus Pods: {{ prometheus_pods.resources | map(attribute='metadata.name') | list }}"
      - "Loki Pods: {{ loki_pods.resources | map(attribute='metadata.name') | list }}"
      - "Tempo Pods: {{ tempo_pods.resources | map(attribute='metadata.name') | list }}"
      - "Grafana Pods: {{ grafana_pods.resources | map(attribute='metadata.name') | list }}"