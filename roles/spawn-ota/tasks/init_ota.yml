---
- name: Create Kubernetes Deployment for funnyklown/ota
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: ota-deployment
        namespace: default  
        labels:
          app: ota
      spec:
        replicas: 2
        selector:
          matchLabels:
            app: ota
        template:
          metadata:
            labels:
              app: ota
          spec:
            containers:
            - name: ota
              image: funnyklown/ota
              imagePullPolicy: Always
              ports:
              - containerPort: 8081
              env:
              - name: MINIO_ACCESS_KEY
                value: "{{ minio_access_key }}"
              - name: MINIO_SECRET_KEY
                value: "{{ minio_secret_key }}"
              readinessProbe:
                httpGet:
                  path: /
                  port: 8081
                initialDelaySeconds: 10
                periodSeconds: 5
              livenessProbe:
                httpGet:
                  path: /
                  port: 8081
                initialDelaySeconds: 15
                periodSeconds: 10
    kubeconfig: "/home/{{ ansible_user }}/.kube/config"


- name: Create Kubernetes Service for funnyklown/ota
  kubernetes.core.k8s:
    state: present
    kubeconfig: "/home/{{ ansible_user }}/.kube/config"
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: ota-service
        namespace: default  # Match the namespace above
      spec:
        selector:
          app: ota
        ports:
        - protocol: TCP
          port: 80  # External port
          targetPort: 8081  # Port the container listens on
        type: LoadBalancer  # Use NodePort or ClusterIP if no external LB is desired

- name: Create OTA Ingress
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: ota-ingress
        namespace: default
        annotations:
          kubernetes.io/ingress.class: nginx
          nginx.ingress.kubernetes.io/ssl-redirect: "true"
          nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
          cert-manager.io/issuer: "letsencrypt-prod"
      spec:
        ingressClassName: nginx
        tls:
          - hosts:
              - charizhard.duckdns.org
            secretName: quickstart-example-tls
        rules:
          - host: charizhard.duckdns.org
            http:
              paths:
                - path: /
                  pathType: Prefix
                  backend:
                    service:
                      name: ota-service
                      port:
                        name: http
    kubeconfig: "/home/{{ ansible_user }}/.kube/config"