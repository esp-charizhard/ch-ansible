---
# Setting up stuff for database
- name: Create PVC for postgres otp
  kubernetes.core.k8s:
    state: present
    kubeconfig: "/home/{{ansible_user}}/.kube/config"
    definition:
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: postgres-pvc
        namespace: default
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi

- name: Create ConfigMap for postgres otp
  kubernetes.core.k8s:
    state: present
    kubeconfig: "/home/{{ansible_user}}/.kube/config"
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: postgres-init-script
        namespace: default
      data:
        init.sql: |
          -- Contents of init.sql should be placed here
          -- For example:
          CREATE TABLE IF NOT EXISTS users (
            id SERIAL PRIMARY KEY,
            username VARCHAR(50) NOT NULL,
            email VARCHAR(100) NOT NULL
          );

- name: Create Deployment for postgres otp
  kubernetes.core.k8s:
    state: present
    kubeconfig: "/home/{{ansible_user}}/.kube/config"
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: postgres
        namespace: default
        labels:
          app: postgres
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: postgres
        template:
          metadata:
            labels:
              app: postgres
          spec:
            containers:
            - name: postgres
              image: postgres:15
              ports:
              - containerPort: 5432
              env:
              - name: POSTGRES_USER
                value: "{{POSTGRES_USER}}"
              - name: POSTGRES_PASSWORD
                value: "{{POSTGRES_PASSWORD}}"
              - name: POSTGRES_DB
                value: "{{POSTGRES_DB}}"
              volumeMounts:
              - name: postgres-data
                mountPath: /var/lib/postgresql/data
              - name: init-script
                mountPath: /docker-entrypoint-initdb.d
            volumes:
            - name: postgres-data
              persistentVolumeClaim:
                claimName: postgres-pvc
            - name: init-script
              configMap:
                name: postgres-init-script

- name: Create Service for postgres otp
  kubernetes.core.k8s:
    state: present
    kubeconfig: "/home/{{ansible_user}}/.kube/config"
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: postgres-svc
        namespace: default
      spec:
        selector:
          app: postgres
        ports:
        - protocol: TCP
          port: 5432
          targetPort: 5432
        type: ClusterIP

# Setting up otp microservice

- name: Create Secret for charizhard-otp configuration files
  kubernetes.core.k8s:
    state: present
    kubeconfig: "/home/{{ ansible_user }}/.kube/config"
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: charizhard-config-secret
        namespace: default
      data:
        otp.json: "{{ otp_json_content | b64encode }}"
  vars:
    otp_json_content: |
      {
        "123454321": {
          "is_set": 0,
          "mail": "gilles@entreprise.com"
        },
        "147258369": {
          "is_set": 0,
          "mail": "elodie@designhouse.io"
        },
        "159357258": {
          "is_set": 0,
          "mail": "paul@industry.com"
        },
        "258147369": {
          "is_set": 0,
          "mail": "isabelle@fintech.biz"
        },
        "357159852": {
          "is_set": 0,
          "mail": "sophie@techworld.io"
        },
        "357258159": {
          "is_set": 0,
          "mail": "charlotte@marketing.biz"
        },
        "369258147": {
          "is_set": 0,
          "mail": "nicolas@engineering.net"
        },
        "456789123": {
          "is_set": 0,
          "mail": "jean@commerce.net"
        },
        "654852147": {
          "is_set": 0,
          "mail": "julie@consulting.fr"
        },
        "789123456": {
          "is_set": 0,
          "mail": "lucie@startup.org"
        },
        "852147369": {
          "is_set": 0,
          "mail": "bernard@entrepreneur.org"
        },
        "852456753": {
          "is_set": 0,
          "mail": "antoine@webservices.net"
        },
        "951753852": {
          "is_set": 0,
          "mail": "mathieu@innovation.com"
        },
        "987654321": {
          "is_set": 0,
          "mail": "marie@business.com"
        }
      }
  
- name: Create secret for asthafinito/charizhard-otp
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'secret-otp.yml') }}"
    kubeconfig: "/home/{{ ansible_user }}/.kube/config"

- name: Create Secret for certificates
  kubernetes.core.k8s:
    state: present
    kubeconfig: "/home/{{ ansible_user }}/.kube/config"
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: charizhard-certificates
        namespace: default
      type: Opaque
      data:
        ca.crt: "{{ lookup('file', 'certs/yW3UzlL6YG13UqPu3J0B.crt') | b64encode }}"
        certif_charizhard.crt: "{{ lookup('file', 'certs/fullchain1.pem') | b64encode }}"
        key_charizhard.key: "{{ lookup('file', 'certs/privkey1.pem') | b64encode }}"

- name: Deploy charizhard-otp
  kubernetes.core.k8s:
    state: present
    kubeconfig: "/home/{{ ansible_user }}/.kube/config"
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: charizhard-otp
        namespace: default
        labels:
          app: charizhard-otp
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: charizhard-otp
        template:
          metadata:
            labels:
              app: charizhard-otp
          spec:
            containers:
              - name: charizhard-otp
                image: asthafinito/charizhard-otp
                imagePullPolicy: Always
                ports:
                  - containerPort: 8443
                volumeMounts:
                  - mountPath: /app/temp_certif
                    name: certificates
                resources:
                  limits:
                    cpu: 500m
                    memory: 2Gi
                  requests:
                    cpu: 500m
                    memory: 50Mi
                env:
                  - name: DATABASE_URL
                    value: "{{ DATABASE_URL }}"
                  - name: POSTGRES_USER
                    value: "{{ POSTGRES_USER }}"
                  - name: POSTGRES_PASSWORD
                    value: "{{ POSTGRES_PASSWORD }}"
                  - name: POSTGRES_DB
                    value: "{{ POSTGRES_DB }}"
                  - name: EMAIL_LOGIN
                    value: "{{ EMAIL_LOGIN }}"
                  - name: EMAIL_PASSWORD
                    value: "{{ EMAIL_PASSWORD }}"
            restartPolicy: Always
            volumes:
              - name: certificates
                secret:
                  secretName: charizhard-certificates

- name: Create Service for charizhard-otp
  kubernetes.core.k8s:
    state: present
    kubeconfig: "/home/{{ ansible_user }}/.kube/config"
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: charizhard-otp-service
        namespace: default
      spec:
        selector:
          app: charizhard-otp
        ports:
        - port: 8443
          targetPort: 8443
          name: ouii
        type: ClusterIP

- name: Create charizhard-otp Ingress
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: ch-wg-ingress-otp-prod
        namespace: default
        annotations:
          kubernetes.io/ingress.class: nginx
          nginx.ingress.kubernetes.io/ssl-passthrough: "true"
      spec:
        ingressClassName: nginx
        tls: null
        rules:
          - host: charizhard-otp.duckdns.org
            http:
              paths:
                - path: /
                  pathType: Prefix
                  backend:
                    service:
                      name: charizhard-otp-service
                      port:
                        name: ouii
    kubeconfig: "/home/{{ ansible_user }}/.kube/config"