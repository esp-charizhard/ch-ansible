---
- name: Create namespace for Keycloak
  kubernetes.core.k8s:
    name: keycloak
    api_version: v1
    kind: Namespace
    state: present
    kubeconfig: "/home/{{ ansible_user }}/.kube/config"

- name: Create postgres statefulset for keycloak
  kubernetes.core.k8s:
    state: present
    definition: 
      apiVersion: apps/v1
      kind: StatefulSet
      metadata:
        name: postgresql-db
        namespace: keycloak
      spec:
        serviceName: postgresql-db-service
        selector:
          matchLabels:
            app: postgresql-db
        replicas: 1
        template:
          metadata:
            labels:
              app: postgresql-db
          spec:
            containers:
              - name: postgresql-db
                image: postgres:15
                volumeMounts:
                  - mountPath: /data
                    name: cache-volume
                env:
                  - name: POSTGRES_USER
                    value: root #to modif test env
                  - name: POSTGRES_PASSWORD
                    value: cacaboudin # to modif test env
                  - name: PGDATA
                    value: /data/pgdata
                  - name: POSTGRES_DB
                    value: keycloak
            volumes:
              - name: cache-volume
                emptyDir: {}
    kubeconfig: "/home/{{ ansible_user }}/.kube/config"

- name: Create Postgres service for Keycloak
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: postgres-db
        namespace: keycloak
      spec:
        selector:
          app: postgresql-db
        type: LoadBalancer
        ports:
        - port: 5432
          targetPort: 5432
    kubeconfig: "/home/{{ ansible_user }}/.kube/config"

- name: Create database secret
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: keycloak-db-secret
        namespace: keycloak
      type: Opaque
      data:
        username: cm9vdA==
        password: Y2FjYWJvdWRpbg==
    kubeconfig: "/home/{{ ansible_user }}/.kube/config"

- name: Create Keycloak ConfigMap for realms
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: keycloak-config
        namespace: keycloak
      data:
        "charizhard-ota-realm.json": |-
          {{ lookup('file', 'kc-config/charizhard-ota-realm.json') | from_json | to_json }}
    kubeconfig: "/home/{{ ansible_user }}/.kube/config"

- name: Deploy Keycloak directly
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: keycloak
        namespace: keycloak
        labels:
          app: keycloak
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: keycloak
        template:
          metadata:
            labels:
              app: keycloak
          spec:
            containers:
              - name: keycloak
                image: quay.io/keycloak/keycloak:26.1.4
                args: ["start" ]
                env:
                  - name: KEYCLOAK_ADMIN
                    value: "admin"
                  - name: KEYCLOAK_ADMIN_PASSWORD
                    value: "admin"
                  - name: KC_PROXY_HEADERS
                    value: "xforwarded"
                  - name: KC_HTTP_ENABLED
                    value: "true"
                  - name: KC_HEALTH_ENABLED
                    value: "true"
                  - name: KC_HOSTNAME
                    value: "charizhard-keycloak.duckdns.org"
                ports:
                  - name: http
                    containerPort: 8080
                readinessProbe:
                  httpGet:
                    path: /health/ready
                    port: 9000
                volumeMounts:
                  - name: keycloak-config-volume
                    mountPath: /etc/keycloak
            volumes:
              - name: keycloak-config-volume
                configMap:
                  name: keycloak-config
    kubeconfig: "/home/{{ ansible_user }}/.kube/config"

- name: Create Keycloak Service
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: keycloak-service
        namespace: keycloak
      spec:
        selector:
          app: keycloak
        ports:
          - name: http
            port: 80
            targetPort: 8080
          - name: https
            port: 443
            targetPort: 8443
        type: ClusterIP
    kubeconfig: "/home/{{ ansible_user }}/.kube/config"

- name: Create Keycloak Ingress for production
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: keycloak-ingress-prod
        namespace: keycloak
        annotations:
          kubernetes.io/ingress.class: nginx
          nginx.ingress.kubernetes.io/ssl-redirect: "true"
          nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
          cert-manager.io/cluster-issuer: cert-manager-webhook-duckdns-production
      spec:
        tls:
          - hosts:
              - charizhard-keycloak.duckdns.org
            secretName: kc-tls-production
        rules:
          - host: charizhard-keycloak.duckdns.org
            http:
              paths:
                - path: /
                  pathType: Prefix
                  backend:
                    service:
                      name: keycloak-service
                      port:
                        name: http
    kubeconfig: "/home/{{ ansible_user }}/.kube/config"
